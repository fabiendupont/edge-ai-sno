---
apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  annotations:
    opendatahub.io/accelerator-name: ''
    opendatahub.io/apiProtocol: REST
    opendatahub.io/recommended-accelerators: '["nvidia.com/gpu"]'
    opendatahub.io/template-display-name: OpenVINO Model Server
    opendatahub.io/template-name: kserve-ovms
    openshift.io/display-name: Yolo
  name: yolo
  namespace: edge-ai-app
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: '8888'
  containers:
    - args:
        - '--model_name={{.Name}}'
        - '--port=8001'
        - '--rest_port=8888'
        - '--model_path=/mnt/models'
        - '--file_system_poll_wait_seconds=0'
        - '--grpc_bind_address=0.0.0.0'
        - '--rest_bind_address=0.0.0.0'
        - '--target_device=AUTO'
        - '--metrics_enable'
      image: 'quay.io/modh/openvino_model_server@sha256:53b7fcf95de9b81e4c8652d0bf4e84e22d5b696827a5d951d863420c68b9cfe8'
      livenessProbe:
        tcpSocket:
          port: 8888
        initialDelaySeconds: 3
        periodSeconds: 3
      readinessProbe:
        httpGet:
          path: /v2/health/live
          port: 8888
        initialDelaySeconds: 5
        periodSeconds: 5
      name: kserve-container
      ports:
        - containerPort: 8888
          protocol: TCP
      volumeMounts:
        - mountPath: /dev/shm
          name: shm
        - mountPath: /data
          name: data
    - image: quay.io/fdupont-redhat/edge-ai-sno/private-transformer:latest
      imagePullPolicy: Always
      name: transformer-container
      command:
        - "python3.12"
        - "-m"
        - "simple"
      args:
        - "--model_name=yolo"
        - "--http_port=8080"
        - "--grpc_port=8081"
        - "--predictor_host=localhost:8888"
        - "--predictor_protocol=v2"
#        - "--protocol=v1"
      env:
        - name: MINIO_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: minio-config
              key: minioEndpoint
        - name: MINIO_USERNAME
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: username
        - name: MINIO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: password
        - name: MINIO_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: minio-config
              key: bucketName
      ports:
        - containerPort: 8080
          protocol: TCP
      readinessProbe:
        tcpSocket:
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 5
#      lifecycle:
#        postStart:
#          exec:
#            command:
#              - /bin/sh
#              - -c
#              - |
#                /usr/bin/python3.12 /app/minio_webhook_enable.py > /data/enable.log 2>&1 > line too long (90 > 80 characters)
#        preStop:
#          exec:
#            command:
#              - /bin/sh
#              - -c
#              - |
#                /usr/bin/python3.12 /app/minio_webhook_disable.py > /data/disable.log 2>&1 > line too long (92 > 80 characters)
      volumeMounts:
        - name: data
          mountPath: /data
  imagePullSecrets:
    - name: image-pull-secret
  multiModel: false
  protocolVersions:
    - v2
    - grpc-v2
  supportedModelFormats:
    - autoSelect: true
      name: openvino_ir
      version: opset13
    - name: onnx
      version: '1'
    - autoSelect: true
      name: tensorflow
      version: '1'
    - autoSelect: true
      name: tensorflow
      version: '2'
    - autoSelect: true
      name: paddle
      version: '2'
    - autoSelect: true
      name: pytorch
      version: '2'
  volumes:
    - emptyDir:
        medium: Memory
        sizeLimit: 2Gi
      name: shm
    - name: data
      persistentVolumeClaim:
        claimName: transformer-data
